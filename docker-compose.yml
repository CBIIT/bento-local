version: '3.4'
services:
  bento-backend:
    container_name: backend
    build:
      #context: .
      context: ${BACKEND_SOURCE_FOLDER}
      #dockerfile: ./dockerfiles/${BUILD_MODE}/backend
      dockerfile: Dockerfile
      args:
        FRONTEND_SOURCE_FOLDER: ${FRONTEND_SOURCE_FOLDER}
        BACKEND_SOURCE_FOLDER: ${BACKEND_SOURCE_FOLDER}
        NEO4J_USER: ${NEO4J_USER}
        NEO4J_PASS: ${NEO4J_PASS}
    environment:
      - NEO4J_URL=bolt://${NEO4J_HOST}:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASS}
      - BENTO_API_VERSION=${BACKEND_BRANCH}
      - AUTH_ENDPOINT=http://${BACKEND_HOST}/api/auth
      - AUTH_ENABLED=false
      - REDIS_ENABLE=false
      - REDIS_USE_CLUSTER=false
      - REDIS_HOST=""
      - REDIS_PORT=9443
      - REDIS_FILTER_ENABLE=false
      - ES_HOST=${ES_HOST}
      - ES_SIGN_REQUESTS=false
      - GRAPHQL_SCHEMA=graphql/bento-extended.graphql
      - GRAPHQL_ES_SCHEMA=graphql/bento-extended-private-es.graphql
      - GRAPHQL_PUBLIC_SCHEMA=graphql/bento-extended.graphql
      - GRAPHQL_PUBLIC_ES_SCHEMA=graphql/bento-extended-public-es.graphql
      - MYSQL_SESSION_ENABLED=false
    networks:
      - default
    ports:
      - 8080:8080
    restart: always

  bento-frontend:
    container_name: frontend
    platform: linux/amd64
    build:
      #context: .
      ##context: ${FRONTEND_SOURCE_FOLDER}
      dockerfile: ./dockerfiles/${BUILD_MODE}/frontend
      #dockerfile: ./${FRONTEND_SOURCE_FOLDER}/Dockerfile
      ##dockerfile: Dockerfile
      args:
        FRONTEND_SOURCE_FOLDER: ${FRONTEND_SOURCE_FOLDER}
        BACKEND_SOURCE_FOLDER: ${BACKEND_SOURCE_FOLDER}
        BENTO_DATA_MODEL: ${BENTO_DATA_MODEL}
        NEO4J_USER: ${NEO4J_USER}
        NEO4J_PASS: ${NEO4J_PASS}
        NEO4J_HOST: ${NEO4J_HOST}
        ES_HOST: ${ES_HOST}
    environment:
      - REACT_APP_BACKEND_API=http://${BACKEND_HOST}:8080/v1/graphql/
      - REACT_APP_BACKEND_PUBLIC_API=http://${BACKEND_HOST}:8080/v1/public-graphql/
      - REACT_APP_FILE_SERVICE_API=http://${FILES_HOST}:8081/api/files/
      - REACT_APP_ABOUT_CONTENT_URL=https://raw.githubusercontent.com/CBIIT/bento-frontend/master/src/content/dev/aboutPagesContent.yaml
      - REACT_APP_BE_VERSION=${BACKEND_BRANCH}
      - REACT_APP_FE_VERSION=${FRONTEND_BRANCH}
      - REACT_APP_AUTH_SERVICE_API=http://localhost/api/auth/
      - REACT_APP_USER_SERVICE_API=http://localhost/api/users/
      - REACT_APP_AUTH=false
      - PUBLIC_ACCESS=Metadata Only
      - NODE_LEVEL_ACCESS=false
      - NODE_LABEL=Study Arm(s)
    volumes:
      - ./${FRONTEND_SOURCE_FOLDER}:/usr/local/bento-frontend
      - /usr/local/bento-frontend/node_modules
    depends_on:
      - neo4j
      - bento-backend
      - bento-files
      - bento-os
    networks:
      - default
    ports:
      #- 80:80
      - 3010:80
      - 8085:3010
    restart: always

  bento-files:
    container_name: files
    build:
      context: .
      dockerfile: ./dockerfiles/${BUILD_MODE}/filedownload
    environment:
      - VERSION=2.3.0.63
      - DATE=${DATE}
      - PROJECT=BENTO
      - URL_SRC=DUMMY
      - BACKEND_URL=http://${BACKEND_HOST}:8080/v1/graphql/
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASS}
      - NEO4J_URI=bolt://${NEO4J_HOST}:7687
    networks:
      - default
    ports:
      - 8081:8081
    restart: always

  bento-os:
    container_name: bento-os
    image: opensearchproject/opensearch:1.2.4
    #image: opensearchproject/opensearch:2.14.0
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - network.bind_host=0.0.0.0
      - network.host=0.0.0.0
      - discovery.type=single-node
      - plugins.security.disabled=true
    depends_on:
      - neo4j
    networks:
      - default
    ports:
      - 8086:80
      - 9200:9200
      - 9600:9600

  neo4j:
    container_name: neo4j
    #platform: linux/amd64
    build:
    #  context: .
      dockerfile: ./dockerfiles/${BUILD_MODE}/neo4j
    #image: neo4j:4.4.19
    hostname: neo4j
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASS}
      #- NEO4J_PASS=${NEO4J_PASS}
      #- NEO4J_AUTH=neo4j/pleaseletmein
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_dbms_allow__upgrade=true
      # - NEO4J_dbms_memory_heap_initial__size=1G
      # - NEO4J_dbms_memory_heap_max__size=2G
      # - NEO4J_dbms_memory_pagecache_size=1G
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - default
    ports:
      - 7474:7474
      - 7687:7687

  bento-dataloader-es:
    container_name: dataloader-es
    build:
      context: .
      #dockerfile: ./dataloader/Dockerfile_es
      dockerfile: ./dockerfiles/${BUILD_MODE}/dataloader
      args:
        FRONTEND_SOURCE_FOLDER: ${FRONTEND_SOURCE_FOLDER}
        BACKEND_SOURCE_FOLDER: ${BACKEND_SOURCE_FOLDER}
        BENTO_DATA_MODEL: ${BENTO_DATA_MODEL}
        NEO4J_USER: ${NEO4J_USER}
        NEO4J_PASS: ${NEO4J_PASS}
        NEO4J_HOST: ${NEO4J_HOST}
        ES_HOST: ${ES_HOST}
    networks:
      - default

volumes:
  neo4j-data:
  neo4j-logs: